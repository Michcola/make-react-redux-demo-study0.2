{"version":3,"sources":["Header.js","ThemeSwitch.js","Content.js","index.js"],"names":["Header","react_default","a","createElement","style","color","this","props","themeColor","Component","connect","state","ThemeSwitch","onSwitchColor","onClick","handleSwitchColor","bind","dispatch","type","Content","src_ThemeSwitch","store","createStore","action","Object","objectSpread","Index","src_Header","src_Content","ReactDOM","render","es","src_Index","document","getElementById"],"mappings":"+OAIMA,mLAMF,OACEC,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAAEC,MAAOC,KAAKC,MAAMC,aAA/B,gCAPeC,aAkBNT,EAFfA,EAASU,YALe,SAACC,GACvB,MAAO,CACLH,WAAYG,EAAMH,aAGbE,CAAyBV,GChB5BY,4LAMeP,GACdC,KAAKC,MAAMM,eACZP,KAAKC,MAAMM,cAAcR,oCAK3B,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEC,MAAO,CAAEC,MAAOC,KAAKC,MAAMC,YAC3BM,QAASR,KAAKS,kBAAkBC,KAAKV,KAAM,QAF7C,OAGAL,EAAAC,EAAAC,cAAA,UACEC,MAAO,CAAEC,MAAOC,KAAKC,MAAMC,YAC3BM,QAASR,KAAKS,kBAAkBC,KAAKV,KAAM,SAF7C,gBAlBkBG,aAwCXG,EAFfA,EAAcF,YAbS,SAACC,GACtB,MAAO,CACLH,WAAWG,EAAMH,aAIM,SAACS,GAC1B,MAAO,CACLJ,cAAc,SAACR,GACbY,EAAS,CAACC,KAAK,eAAeV,WAAWH,OAIjCK,CAA2CE,GCrCnDO,mLAMF,OACElB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,MAAO,CAAEC,MAAOC,KAAKC,MAAMC,aAA9B,qCACAP,EAAAC,EAAAC,cAACiB,EAAD,cATcX,aAsBPU,EAFfA,EAAUT,YALc,SAACC,GACvB,MAAO,CACLH,WAAYG,EAAMH,aAGZE,CAAyBS,WCJ3BE,SAAQC,YAZO,SAACX,EAAOY,GAC3B,IAAKZ,EAAO,MAAO,CACjBH,WAAY,OAEd,OAAQe,EAAOL,MACb,IAAK,eACH,OAAOM,OAAAC,EAAA,EAAAD,CAAA,GAAKb,EAAZ,CAAmBH,WAAYe,EAAOf,aACxC,QACE,OAAOG,MAMPe,mLAEF,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAACyB,EAAD,cALYnB,aAWtBoB,IAASC,OACP7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAUV,MAAOA,GACjBpB,EAAAC,EAAAC,cAAC6B,EAAD,OAEAC,SAASC,eAAe","file":"static/js/main.47247f9b.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Header extends Component {\r\n  static propTypes = {\r\n    themeColor: PropTypes.string\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <h1 style={{ color: this.props.themeColor }}>React.js 小书</h1>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    themeColor: state.themeColor\r\n  }\r\n}\r\nHeader = connect(mapStateToProps)(Header)\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ThemeSwitch extends Component {\r\n  static propTypes = {\r\n    themeColor: PropTypes.string,\r\n    onSwitchColor:PropTypes.func\r\n  }\r\n\r\n  handleSwitchColor (color) {\r\n    if(this.props.onSwitchColor){\r\n      this.props.onSwitchColor(color)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <button\r\n          style={{ color: this.props.themeColor }}\r\n          onClick={this.handleSwitchColor.bind(this, 'red')}>Red</button>\r\n        <button\r\n          style={{ color: this.props.themeColor }}\r\n          onClick={this.handleSwitchColor.bind(this, 'blue')}>Blue</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToPros = (state)=>{\r\n  return {\r\n    themeColor:state.themeColor\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSwitchColor:(color) => {\r\n      dispatch({type:'CHANGE_COLOR',themeColor:color})\r\n    }\r\n  }\r\n}\r\nThemeSwitch = connect(mapStateToPros,mapDispatchToProps)(ThemeSwitch)\r\n\r\nexport default ThemeSwitch","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ThemeSwitch from './ThemeSwitch'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Content extends Component {\r\n  static propTypes = {\r\n    themeColor: PropTypes.string\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <p style={{ color: this.props.themeColor }}>React.js 小书内容</p>\r\n        <ThemeSwitch />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    themeColor: state.themeColor\r\n  }\r\n}\r\nContent = connect(mapStateToProps)(Content)\r\n\r\nexport default Content","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Header from './Header'\nimport Content from './Content'\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport './index.css'\n\n  \n  const themeReducer = (state, action) => {\n    if (!state) return {\n      themeColor: 'red'\n    }\n    switch (action.type) {\n      case 'CHANGE_COLOR':\n        return { ...state, themeColor: action.themeColor }\n      default:\n        return state\n    }\n  }\n  \n  const store = createStore(themeReducer)\n\n  class Index extends Component {\n    render () {\n      return (\n        <div>\n          <Header />\n          <Content />\n        </div>\n      )\n    }\n  }\n\nReactDOM.render(\n  <Provider store={store}>\n  <Index />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}